// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`array.sh 1`] = `
====================================options=====================================
parsers: ["bash"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
#!/bin/bash

# Arrays seem to be unsupported by parser?

declare -a foo
declare -a foo[sub]
# declare -a foo=(a b c)
# foo=(a b c)

declare -A bar
bar[baz]=quax
# declare -A bar=(
#   [baz]=quax
#   [quax]=baz
# )

=====================================output=====================================
declare -a foo
declare -a foo[sub]
declare -A bar
bar[baz]=quax
================================================================================
`;

exports[`manipulation.sh 1`] = `
====================================options=====================================
parsers: ["bash"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
#!/bin/bash

foo=\${bar/1/2}
foo=\${bar//1/2}

foo=\${bar^}
foo=\${bar^^}

foo=\${bar,}
foo=\${bar,,}

=====================================output=====================================
foo=\${bar/1/2}
foo=\${bar//1/2}
foo=\${bar^}
foo=\${bar^^}
foo=\${bar,}
foo=\${bar,,}
================================================================================
`;

exports[`variables.sh 1`] = `
====================================options=====================================
parsers: ["bash"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
#!/bin/bash

FOO=bar

FOO=$(bar)

FOO=$((1))

declare -r FOO

=====================================output=====================================
FOO=bar
FOO=$(bar)
FOO=$((1))
declare -r FOO
================================================================================
`;
